{"version":3,"sources":["components/PizzaForm.js","components/RestaurantPanel.js","components/RestaurantPanels.js","components/Home.js","validation/formSchema.js","components/ToppingsList.js","components/Confirmation.js","App.js","index.js"],"names":["PizzaForm","props","options","submit","change","disabled","errors","onChange","evt","target","name","value","type","checked","className","onSubmit","preventDefault","placeholder","first_name","last_name","size","sauce","cheese","pepperoni","sausage","greenPeppers","onion","blackOlives","greenOlives","mushroom","bananaPeppers","pineapple","specialInstructions","RestaurantPanel","src","alt","RestaurantPanels","Home","to","yup","shape","min","required","oneOf","ToppingsList","toppings","map","topping","Confirmation","initialFormData","initialFormErrors","App","useState","pizzaOptions","setPizzaOptions","formData","setFormData","formErrors","setFormErrors","setDisabled","hist","useHistory","useEffect","schema","isValid","then","valid","exact","path","validate","catch","err","newOrder","axios","post","res","console","log","data","postNewOrder","trim","filter","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e3025c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function PizzaForm(props) {\r\n  // declare states\r\n  const { options, submit, change, disabled, errors } = props;\r\n  //onChange\r\n  const onChange = (evt) => {\r\n    const { name, value, type, checked } = evt.target;\r\n    const valueToUse = type === \"checkbox\" ? checked : value;\r\n    change(name, valueToUse);\r\n  };\r\n  //onSubmit\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    submit();\r\n  };\r\n  //return Form\r\n\r\n  return (\r\n    <form className=\"pizzaBuilder\" onSubmit={onSubmit}>\r\n      <label>\r\n        Customer Details: <br />\r\n        <label>\r\n          Name: &nbsp;\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"first\"\r\n            name=\"first_name\"\r\n            onChange={onChange}\r\n            value={options.first_name}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"last\"\r\n            name=\"last_name\"\r\n            onChange={onChange}\r\n            value={options.last_name}\r\n          />\r\n        </label>\r\n        <label></label>\r\n      </label>\r\n\r\n      <h2>Build your own Pizza</h2>\r\n\r\n      <label className=\"size pane\">\r\n        Choose your Size: &nbsp;\r\n        <select name=\"size\" onChange={onChange} value={options.size}>\r\n          <option value=\"\">Select Size</option>\r\n          <option value=\"S\">Small</option>\r\n          <option value=\"M\">Medium</option>\r\n          <option value=\"L\">Large</option>\r\n          <option value=\"XL\">X-tra Large</option>\r\n        </select>\r\n      </label>\r\n\r\n      <label className=\"sauce pane\">\r\n        Choose your sauce:\r\n        <input\r\n          type=\"radio\"\r\n          value=\"none\"\r\n          name=\"sauce\"\r\n          checked={options.sauce === \"none\"}\r\n          onChange={onChange}\r\n        />\r\n        None\r\n        <input\r\n          type=\"radio\"\r\n          value=\"classic\"\r\n          name=\"sauce\"\r\n          checked={options.sauce === \"classic\"}\r\n          onChange={onChange}\r\n        />\r\n        Classic Tomato\r\n        <input\r\n          type=\"radio\"\r\n          value=\"bbq\"\r\n          name=\"sauce\"\r\n          checked={options.sauce === \"bbq\"}\r\n          onChange={onChange}\r\n        />\r\n        Tangy Barbecue\r\n        <input\r\n          type=\"radio\"\r\n          value=\"alfredo\"\r\n          name=\"sauce\"\r\n          checked={options.sauce === \"alfredo\"}\r\n          onChange={onChange}\r\n        />\r\n        Alfredo\r\n      </label>\r\n\r\n      <label className=\"toppings pane\">\r\n        Choose your Toppings:\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"cheese\"\r\n            checked={options.cheese}\r\n            onChange={onChange}\r\n          />\r\n          Cheese\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"pepperoni\"\r\n            checked={options.pepperoni}\r\n            onChange={onChange}\r\n          />\r\n          Pepperoni\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"sausage\"\r\n            checked={options.sausage}\r\n            onChange={onChange}\r\n          />\r\n          Sausage\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"greenPeppers\"\r\n            checked={options.greenPeppers}\r\n            onChange={onChange}\r\n          />\r\n          Green Peppers\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"onion\"\r\n            checked={options.onion}\r\n            onChange={onChange}\r\n          />\r\n          Onion\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"blackOlives\"\r\n            checked={options.blackOlives}\r\n            onChange={onChange}\r\n          />\r\n          Black Olives\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"greenOlives\"\r\n            checked={options.greenOlives}\r\n            onChange={onChange}\r\n          />\r\n          Green Olives\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"mushroom\"\r\n            checked={options.mushroom}\r\n            onChange={onChange}\r\n          />\r\n          Mushroom\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"bananaPeppers\"\r\n            checked={options.bananaPeppers}\r\n            onChange={onChange}\r\n          />\r\n          Banana Peppers\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"pineapple\"\r\n            checked={options.pineapple}\r\n            onChange={onChange}\r\n          />\r\n          Pineapple\r\n        </label>\r\n      </label>\r\n\r\n      <label className=\"instructions pane\">\r\n        {/* COULD ALSO HAVE BEEN A TEXT AREA */}\r\n        Special Instructions: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"(pepperonis in a smiley face)\"\r\n          name=\"specialInstructions\"\r\n          onChange={onChange}\r\n          value={options.specialInstructions}\r\n        />\r\n      </label>\r\n      <div className=\"errors\">\r\n        <div>{errors.last_name}</div>\r\n        <div>{errors.first_name}</div>\r\n        <div>{errors.size}</div>\r\n        <div>{errors.sauce}</div>\r\n      </div>\r\n      <button disabled={disabled} className=\"orderButton\">\r\n        Place Order\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RestaurantPanel() {\r\n  return (\r\n    <div className=\"restaurantPanel\">\r\n      <img src=\"https://picsum.photos/536/354\" alt=\"random\" />\r\n      <h4>Resturant Name</h4>\r\n      <p>cost-genre-genre-genre</p>\r\n      <div>ETA</div>\r\n      <span>Fee</span>\r\n    </div>\r\n  );\r\n}\r\n","import RestaurantPanel from \"./RestaurantPanel\";\r\nimport React from \"react\";\r\n\r\nexport default function RestaurantPanels() {\r\n  return (\r\n    <div>\r\n      <div className=\"restaurantPanels top\">\r\n        <RestaurantPanel />\r\n        <RestaurantPanel />\r\n        <RestaurantPanel />\r\n      </div>\r\n      <div className=\"restaurantPanels bottom\">\r\n        <RestaurantPanel />\r\n        <RestaurantPanel />\r\n        <RestaurantPanel />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RestaurantPanels from \"./RestaurantPanels\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"homePage\">\r\n      <div className=\"pizzaHeader\">\r\n        <p>Your Favorite Food, Delivered While Coding</p>\r\n        <Link className=\"pizzaLink\" to=\"/pizza\">\r\n          Want Pizza? Click Here!\r\n        </Link>\r\n      </div>\r\n\r\n      <h3>Food Delivery Near here</h3>\r\n      <RestaurantPanels />\r\n    </div>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport default yup.object().shape({\r\n  first_name: yup.string().min(2).required(\"First Name is required\"),\r\n  last_name: yup.string().min(2).required(\"Last Name is required\"),\r\n  size: yup.string().oneOf([\"S\", \"M\", \"L\", \"XL\"]),\r\n  sauce: yup.string().oneOf([\"none\", \"classic\", \"bbq\", \"alfredo\"]),\r\n  cheese: yup.boolean(),\r\n  pepperoni: yup.boolean(),\r\n  sausage: yup.boolean(),\r\n  greenPeppers: yup.boolean(),\r\n  onion: yup.boolean(),\r\n  blackOlives: yup.boolean(),\r\n  greenOlives: yup.boolean(),\r\n  mushroom: yup.boolean(),\r\n  bananaPeppers: yup.boolean(),\r\n  pineapple: yup.boolean(),\r\n  specialInstructions: yup.string(),\r\n});\r\n","import React from \"react\";\r\n\r\nexport default function ToppingsList(props) {\r\n  const { toppings } = props;\r\n  if (!toppings) {\r\n    return <p>Toppings: None Selected</p>;\r\n  }\r\n  return (\r\n    <div className=\"toppingsList\">\r\n      <p>Toppings:</p>\r\n      <ul>\r\n        {toppings.map((topping) => {\r\n          return <li>{topping}</li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ToppingsList from \"./ToppingsList\";\r\nexport default function Confirmation(props) {\r\n  const { options } = props;\r\n  if (!options) {\r\n    return <h3>Working fetching your Order details...</h3>;\r\n  }\r\n  return (\r\n    <div className=\"confirmationPage\">\r\n      <h2>Congrats! Pizza is on its way!</h2>\r\n      <div className=\"orderDetails\">\r\n        <p>\r\n          Name: &nbsp; {options.first_name}&nbsp;{options.last_name}\r\n        </p>\r\n        <p>Size: &nbsp; {options.size}</p>\r\n        <p>Sauce: &nbsp; {options.sauce}</p>\r\n        <ToppingsList toppings={options.toppings} />\r\n        <p>Special Instructions: &nbsp; {options.specialInstructions}</p>\r\n      </div>\r\n      <div className=\"pizzaDog\">\r\n        <h3>While you wait, how about a dog with a pizza</h3>\r\n        <img\r\n          src=\"https://www.rover.com/blog/wp-content/uploads/2017/03/800_9397.jpg\"\r\n          alt=\"\r\n          dog\r\n          Pizza\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PizzaForm from \"./components/PizzaForm\";\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport * as yup from \"yup\";\r\nimport schema from \"./validation/formSchema\";\r\nimport axios from \"axios\";\r\nimport Confirmation from \"./components/Confirmation\";\r\n\r\nconst initialFormData = {\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  size: \"\",\r\n  sauce: \"\",\r\n  cheese: false,\r\n  pepperoni: false,\r\n  sausage: false,\r\n  greenPeppers: false,\r\n  onion: false,\r\n  blackOlives: false,\r\n  greenOlives: false,\r\n  mushroom: false,\r\n  bananaPeppers: false,\r\n  pineapple: false,\r\n  specialInstructions: \"\",\r\n};\r\nconst initialFormErrors = {\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  size: \"\",\r\n  sauce: \"\",\r\n  specialInstructions: \"\",\r\n};\r\nconst initialDisabled = true;\r\n\r\nconst App = () => {\r\n  const [pizzaOptions, setPizzaOptions] = useState([]);\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\r\n  const [disabled, setDisabled] = useState(initialDisabled);\r\n  const hist = useHistory();\r\n\r\n  const postNewOrder = (newOrder) => {\r\n    axios\r\n      .post(\"https://reqres.in/api/pizza\", newOrder)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setPizzaOptions(res.data);\r\n\r\n        setFormData(initialFormData);\r\n      })\r\n      .catch((err) => {\r\n        setFormData(initialFormData);\r\n        console.log(\"There was an error making the pizza\");\r\n      });\r\n  };\r\n\r\n  const inputChange = (name, value) => {\r\n    yup\r\n      .reach(schema, name)\r\n      .validate(value)\r\n      .then(() => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: err.errors[0],\r\n        });\r\n      });\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submitForm = () => {\r\n    const newOrder = {\r\n      first_name: formData.first_name.trim(),\r\n      last_name: formData.last_name.trim(),\r\n      size: formData.size,\r\n      sauce: formData.sauce,\r\n      toppings: [\r\n        \"cheese\",\r\n        \"pepperoni\",\r\n        \"sausage\",\r\n        \"greenPeppers\",\r\n        \"onion\",\r\n        \"blackOlives\",\r\n        \"greenOlives\",\r\n        \"mushroom\",\r\n        \"bananaPeppers\",\r\n        \"pineapple\",\r\n      ].filter((topping) => formData[topping]),\r\n      specialInstructions: formData.specialInstructions,\r\n    };\r\n    postNewOrder(newOrder);\r\n    hist.push(`/confirmation`);\r\n  };\r\n  useEffect(() => {\r\n    schema.isValid(formData).then((valid) => {\r\n      setDisabled(!valid);\r\n    });\r\n  }, [formData]);\r\n  return (\r\n    <>\r\n      <nav>\r\n        <h1>Lambda Eats</h1>\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/help\">Help</Link>\r\n        </div>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/pizza\">\r\n          <PizzaForm\r\n            options={formData}\r\n            change={inputChange}\r\n            submit={submitForm}\r\n            disabled={disabled}\r\n            errors={formErrors}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/confirmation\">\r\n          <Confirmation options={pizzaOptions} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}